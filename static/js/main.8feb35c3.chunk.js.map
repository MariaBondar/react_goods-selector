{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","changeGoods","good","setState","removeGoods","goods","index","indexOf","splice","clearGoods","getText","str","length","join","slice","this","className","map","type","onClick","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,E,4MACJC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,YAAc,SAACC,GACb,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,aAAa,GAAD,mBAAMD,EAAMC,cAAZ,CAA0BE,S,EAI1CE,YAAc,SAACF,GACb,EAAKC,UAAS,SAACJ,GACb,IAAMM,EAAQN,EAAMC,aACdM,EAAQD,EAAME,QAAQL,GAI5B,OAFAG,EAAMG,OAAOF,EAAO,GAEb,CAAEN,aAAcK,O,EAI3BI,WAAa,WACX,EAAKN,SAAS,CAAEH,aAAc,M,EAGhCU,QAAU,SAACC,GACT,OAAQA,EAAIC,QACV,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUD,EAAI,GAAd,gBAEF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAIE,KAAK,SAAnB,iBAEF,QACE,MAAM,GAAN,OAAUF,EAAIG,MAAM,GAAI,GAAGD,KAAK,MAAhC,gBAA6CF,EAAIA,EAAIC,OAAS,GAA9D,mB,4CAIN,WAAU,IAAD,OACCZ,EAAiBe,KAAKhB,MAAtBC,aAER,OACE,sBAAKgB,UAAU,MAAf,UACE,oBAAIA,UAAU,YAAd,SAA2BD,KAAKL,QAAQV,KACxC,oBAAIgB,UAAU,OAAd,SAEInB,EAAgBoB,KAAI,SAAAf,GAAI,OACtB,qBAAIc,UAAU,aAAd,UACGd,EACD,wBACEgB,KAAK,SACLF,UAAU,eACVG,QACEnB,EAAaoB,SAASlB,GAClB,kBAAM,EAAKE,YAAYF,IACvB,kBAAM,EAAKD,YAAYC,IAN/B,SASGF,EAAaoB,SAASlB,GAAQ,SAAW,aAXdA,QAiBtC,wBACEc,UAAU,qBACVE,KAAK,SACLC,QAASJ,KAAKN,WAHhB,0B,GApEUY,IAAMC,WAgFTxB,ICnGfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8feb35c3.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string[];\n};\n\ntype Props = {};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  changeGoods = (good: string) => {\n    this.setState((state) => ({\n      selectedGood: [...state.selectedGood, good],\n    }));\n  };\n\n  removeGoods = (good: string) => {\n    this.setState((state) => {\n      const goods = state.selectedGood;\n      const index = goods.indexOf(good);\n\n      goods.splice(index, 1);\n\n      return { selectedGood: goods };\n    });\n  };\n\n  clearGoods = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  getText = (str: string[]) => {\n    switch (str.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${str[0]} is selected`;\n\n      case 2:\n        return `${str.join(' and ')} are selected`;\n\n      default:\n        return `${str.slice(0, -1).join(', ')} and ${str[str.length - 1]} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__head\">{this.getText(selectedGood)}</h1>\n        <ul className=\"list\">\n          {\n            goodsFromServer.map(good => (\n              <li className=\"list__item\" key={good}>\n                {good}\n                <button\n                  type=\"button\"\n                  className=\"button__item\"\n                  onClick={\n                    selectedGood.includes(good)\n                      ? () => this.removeGoods(good)\n                      : () => this.changeGoods(good)\n                  }\n                >\n                  {selectedGood.includes(good) ? 'Remove' : 'Select'}\n                </button>\n              </li>\n            ))\n          }\n        </ul>\n        <button\n          className=\"button__lastButton\"\n          type=\"button\"\n          onClick={this.clearGoods}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}